<?php

use Drupal\user\Entity\User;

/**
* @file
* Contains comp_core.module.
*/

/**
 * Implements hook_form_FORM_ID_alter().
 */
function comp_core_form_node_composite_form_alter(&$form, $form_state, $form_id) {
  // Add validation for graduation ceremony link.
  $form['#validate'][] = 'val_grad_link';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function comp_core_form_node_composite_edit_form_alter(&$form, $form_state, $form_id) {
  // Add validation for graduation ceremony link.
  $form['#validate'][] = 'val_grad_link';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function comp_core_preprocess_node__composite(&$variables) {
  // Get graduation ceremony url and validate.
  $url = !empty($variables['content']['field_grad_ceremony']['0']['#title']) ?
    $variables['content']['field_grad_ceremony']['0']['#title'] :
    NULL;

  // Don't pass ceremony link value if the URL is not valid.
  if (!$url or $url and !url_valid($url)) {
    unset($variables['content']['field_grad_ceremony']['0']);
  }
}

/**
 * Implements hook_theme().
 */
function comp_core_theme($existing, $type, $theme, $path) {
  return [
    'comp_landing' => [
      'variables' => [],
    ],
    'comp_about' => [
      'variables' => [],
    ],
    'comp_ack' => [
      'variables' => [],
    ],
  ];
}

/**
 * Implements hook_page_attachments().
 */
function comp_core_page_attachments(array &$attachments) {
  if (!\Drupal::currentUser()->hasPermission('access toolbar')) {
    return;
  }

  $attachments['#attached']['library'][] = 'comp_core/toolbar-overrides';
}

/**
 * Validate graduation ceremony link URL.
 */
function val_grad_link(&$form, $form_state) {
  // Retrieve graduation ceremony URL from form.
  $url = $form_state->getValue('field_grad_ceremony')[0]['uri'];
  // Validate URL and display error if failed.
  if (!url_valid($url)) {
    $message = "The Graduation Ceremony URL is invalid";
    $form_state->setErrorByName('field_grad_ceremony', $message);
  }
}

/**
 * Returns true if URL header contains status OK, false otherwise.
 */
function url_valid($url = NULL) {
  if ($url) {
    // Get URL headers.
    $headers = get_headers($url);
    // Return header evaluated agains status OK (200).
    $valid = strpos($headers[0], '200') ? TRUE : FALSE;
    return $valid;
  }
  else {
    return FALSE;
  }
}
